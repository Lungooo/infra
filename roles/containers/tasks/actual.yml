---
- name: Set container variables
  ansible.builtin.set_fact:
    container_user: '{{ secrets.users.actual.name }}'
    container_name: actual

- name: Determine if directories needed by actual exist
  ansible.builtin.stat:
    path: '{{ service_config_root }}/{{ container_name }}/data'
  register: path

- name: Create directories if they do not exist
  ansible.builtin.file:
    path: '{{ service_config_root }}/{{ item }}'
    owner: '{{ container_user }}'
    group: '{{ container_user }}'
    mode: '0755'
    recurse: false
    state: directory
  loop:
    - '{{ container_name }}'
    - '{{ container_name }}/data'
  when: not path.stat.exists

- name: Create actual container
  become: true
  become_user: '{{ container_user }}'
  containers.podman.podman_container:
    name: '{{ container_name }}'
    image: ghcr.io/actualbudget/actual-server
    image_strict: true
    rm: true
    userns: auto
    publish:
      - '127.0.0.1:5006:5006'
    volume:
      - '{{ service_config_root }}/{{ container_name }}/data:/data:U'
    label:
      io.containers.autoupdate: registry
    # TODO: Switch to Quadlet as soon as podman is >= 4.4 on debian 12
    #
    # quadlet_options:
    #   - 'AutoUpdate=registry'
    #   - |
    #     [Install]
    #     WantedBy=default.target
    # quadlet_filename: 'container-{{ container_name }}'
    # state: quadlet
    state: created
  when: ansible_os_family == 'Debian'

- name: Generate systemd unit file for actual container
  become: true
  become_user: '{{ container_user }}'
  containers.podman.podman_generate_systemd:
    name: '{{ container_name }}'
    new: true
    no_header: true
    restart_sec: 10
    restart_policy: always
    dest: '~/.config/systemd/user'
  when: ansible_os_family == 'Debian'

- name: Create actual container Quadlet
  become: true
  become_user: '{{ container_user }}'
  containers.podman.podman_container:
    name: '{{ container_name }}'
    image: ghcr.io/actualbudget/actual-server
    image_strict: true
    userns: auto
    publish:
      - '127.0.0.1:5006:5006'
    volume:
      - '{{ service_config_root }}/{{ container_name }}/data:/data:Z,U'
    quadlet_options:
      - 'AutoUpdate=registry'
      - |
        [Install]
        WantedBy=default.target
    quadlet_filename: 'container-{{ container_name }}'
    state: quadlet
  register: quadlet
  when: ansible_os_family == 'RedHat'

- name: Set restart on change
  ansible.builtin.set_fact:
    container_state: '{{ (quadlet.changed | default(false)) | ternary("restarted", "started") }}'

- name: Ensure actual container is started and enabled
  become: true
  become_user: '{{ container_user }}'
  ansible.builtin.systemd_service:
    name: 'container-{{ container_name }}'
    daemon_reload: true
    state: '{{ container_state }}'
    scope: user
    enabled: true
